---
name: Maven

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

permissions: {}

env:
  MAVEN_OPTS: >
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  MAVEN_CLI_OPTS: >
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    -DinstallAtEnd=true
    -DdeployAtEnd=true

jobs:
  build_samples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11, 17, 21, 24]
        subproject:
          [
            "safe/java-lang-foreign-memorysegment",
            "safe/java-lang-webservice",
            "unsafe/jdk-internal-misc-unsafe",
            "unsafe/sun-misc-unsafe",
            "unsafe/sun-misc-unsafe-webservice",
          ]
    name: ${{ matrix.subproject }} - Java ${{ matrix.java }}
    steps:
      - name: Set REPOSITORY
        shell: bash
        run: echo "REPOSITORY=${GITHUB_REPOSITORY#*/}" >> "${GITHUB_ENV}"
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set SOURCE_DATE_EPOCH
        run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> "${GITHUB_ENV}"
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
      - name: Set MAVEN_EXTRA_OPTS
        if: matrix.java == 8
        shell: bash
        run: |
          # Forcing dependency versions to a version compatible
          # with Java 8. Dependency check version does not matter due to
          # dependencyCheck.skip=true. But otherwise Maven initialization
          # fails with error: "java.lang.TypeNotPresentException:
          # Type org.owasp.dependencycheck.maven.CheckMojo not present".
          echo 'MAVEN_EXTRA_OPTS=-Dspotbugs.version=4.8.6.6 -DdependencyCheck.version=10.0.4' >> "${GITHUB_ENV}"
      - name: Build with Maven
        working-directory: ${{ matrix.subproject }}
        if: |
          ( matrix.subproject != 'unsafe/jdk-internal-misc-unsafe' ||  matrix.java >= 11 )
          && ( matrix.subproject != 'safe/java-lang-foreign-memorysegment' ||  matrix.java >= 22 )
          && ( matrix.subproject != 'unsafe/sun-misc-unsafe-webservice' ||  matrix.java >= 17 )
          && ( matrix.subproject != 'safe/java-lang-webservice' ||  matrix.java >= 17 )
        shell: bash
        run: |
          # shellcheck disable=SC2086
          ./mvnw ${MAVEN_CLI_OPTS} ${MAVEN_EXTRA_OPTS} -DdependencyCheck.skip=true verify
      - name: Set ARTIFACT_NAME
        shell: bash
        run: echo "ARTIFACT_NAME=${{ matrix.subproject }}-${{ matrix.java }}" | sed -e 's!/!-!g' >> "${GITHUB_ENV}"
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ matrix.subproject }}/target/
      - name: Clean up
        shell: bash
        run: rm "${HOME}/.m2/settings.xml"
  build_plugins:
    runs-on: ubuntu-latest
    name: Build Plugins
    steps:
      - name: Set REPOSITORY
        shell: bash
        run: echo "REPOSITORY=${GITHUB_REPOSITORY#*/}" >> "${GITHUB_ENV}"
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set SOURCE_DATE_EPOCH
        run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> "${GITHUB_ENV}"
      - name: Set up JDK 11
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 11
      - name: Build with Maven
        working-directory: spotbugs
        shell: bash
        run: |
          # shellcheck disable=SC2086
          ./mvnw ${MAVEN_CLI_OPTS} verify
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: unsafe-plugin
          path: spotbugs/target/
      - name: Clean up
        shell: bash
        run: rm "${HOME}/.m2/settings.xml"
